## Bash Profile with useful settings and aliases
##
## Meant to be cloned to workstation for consistent terminal use

export GNUTERM=x11

###export PS1="$(tput setaf 1)\u:\W $(tput sgr0)$"
#   -------------------------------
#   1. ENVIRONMENT CONFIGURATION
#   -------------------------------

#   Change Prompt
#   ------------------------------------------------------------

## git_branch() defined at end of file

PS1="$(tput sgr 0 1) \`pwd\`                                            \`git_branch\` $(tput sgr0) | "
PS1+="\u @ \h  \n| =>"
export PS1
export PS2="| =>"

#   Set Paths
#   ------------------------------------------------------------
export PATH="$PATH:/usr/local/bin/"
export PATH="$PATH:/Users/$USER/bin"
export PATH="$PATH"

#   Set Default Editor 
#   ------------------------------------------------------------
export EDITOR=/usr/bin/vim

#   -------------------------------
#   2. TERMINAL ALIASES AND FUNCTIONS
#   -------------------------------

alias cp="cp -iv"			
alias mv="mv -iv"
alias ls="ls -FGlAhp"
alias less="less -FSRXc"
alias mkdir="mkdir -pv"

cd() { builtin cd "$@"; ls; }
alias cd..='cd ../'
alias ..='cd ../' 
alias ...='cd ../../'
alias .3='cd ../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../../'
alias .6='cd ../../../../../../' 
alias ~="cd ~"

alias clr="clear"
alias cls="clear"
alias finder="open -a Finder ./"

alias show_options="shopt"


function git_branch {
  local git_status="$(git status 2> /dev/null)"
  local on_branch="On branch ([^${IFS}]*)"
  local on_commit="HEAD detached at ([^${IFS}]*)"

  if [[ $git_status != "" ]]; then
    local branch_msg="(";
  else
    local branch_msg="              "
  fi  

  if [[ $git_status =~ "Untracked files:" ]]; then
    branch_msg+="> "
  elif [[ $git_status =~ "" ]]; then
    branch_msg+=""
  fi

  if [[ $git_status =~ $on_branch ]]; then
    local branch=${BASH_REMATCH[1]}
    branch_msg+="$branch"
  elif [[ $git_status =~ $on_commit ]]; then
    local commit=${BASH_REMATCH[1]}
    branch_msg+="$commit"
  fi

  if [[ $git_status =~ "Your branch is ahead of" ]]; then
    branch_msg+=" +"
    local num=`git status | grep -o '[0-9]\+'`
    branch_msg+="$num"
  elif [[ $git_status =~ "" ]]; then
    branch_msg+=""
  fi

  if [[ $git_status =~ "Changes to be committed:" ]]; then
    branch_msg+="*"
  elif [[ $git_status =~ "" ]]; then
    branch_msg+=""
  fi

  if [[ $git_status != "" ]]; then
    branch_msg+=")"
  fi

  echo "$branch_msg"
}




